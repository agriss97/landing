import React, { useState, useEffect } from "react";
import axios from "axios"; // Import axios for making API requests

// Define a function for fetching data and setting loading states
const fetchData = async (url, setData, setIsLoading) => {
  try {
    const response = await axios.get(url); 
    setData(response.data);
  } catch (error) {
    console.error(`Error fetching data from ${url}:`, error);
    // Handle error more gracefully, like displaying a user-friendly message
  } finally {
    setIsLoading(false);
  }
};

function App() {
  const [projects, setProjects] = useState([]);
  const [mentors, setMentors] = useState([]);
  const [isLoadingProjects, setIsLoadingProjects] = useState(true);
  const [isLoadingMentors, setIsLoadingMentors] = useState(true);
  const [filter, setFilter] = useState("all"); 

  // Fetch project data from Node.js backend on component mount
  useEffect(() => {
    fetchData("http://localhost:3000/projects", setProjects, setIsLoadingProjects);
  }, []);

  // Fetch mentor data from Node.js backend on component mount
  useEffect(() => {
    fetchData("http://localhost:3000/mentors", setMentors, setIsLoadingMentors);
  }, []);

  // Function to handle filter changes
  const handleFilterChange = (newFilter) => {
    setFilter(newFilter);
  };

  // Filter projects based on selected filter
  const filteredProjects = filter === "all"
    ? projects
    : projects.filter((project) => project.category === filter);

  // Render the landing page
  return (
    <div className="container">
      {/* ... (rest of your code) ... */}
    </div>
  );
}

export default App;
